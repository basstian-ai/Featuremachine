name: AI Dev Agent
on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 8 * * 1-5" # weekdays 08:00 UTC

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      # Fallback ensures a tiny PR exists even if the agent does nothing on first run.
      - name: Fallback tiny change if agent is idle
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # gh CLI uses this
        run: |
          set -euo pipefail

          if grep -q "\- \[ \] T-001" .ai/backlog/tasks.md; then
            git checkout -B agent/t-001-logger

            mkdir -p lib
            printf '%s\n' 'export function log(msg){ console.log("[log]", msg) }' > lib/logger.js

            sed -i 's/- \[ \] T-001/- [x] T-001/' .ai/backlog/tasks.md

            git config user.email "actions@github.com"
            git config user.name "github-actions[bot]"
            git add -A
            git commit -m "feat: add tiny logger and close T-001" || echo "Nothing to commit"
            git push -u origin agent/t-001-logger --force-with-lease || echo "Branch already pushed"

            BODY="$(sed "s/{{task_id}}/T-001/;s/{{title}}/Add a tiny logger utility/" .ai/templates/pr-template.md)"
            gh pr create \
              --base main \
              --head agent/t-001-logger \
              --title 'AI Agent: T-001 tiny logger' \
              --body "$BODY" || echo "PR may already exist"
          else
            echo "No unchecked T-001 found; skipping fallback."
          fi
            - uses: basstian-ai/ai-dev-agent@v1
        continue-on-error: true   # <-- add this line
        with:
          config: ${{ vars.AGENT_CONFIG_PATH || '.ai/agent.yml' }}
          max-diff-lines: ${{ vars.AGENT_MAX_DIFF_LINES || '400' }}
          repair-only: ${{ vars.AGENT_REPAIR_ONLY || 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ vars.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ vars.VERCEL_PROJECT_ID }}
          VERCEL_TEAM_ID: ${{ vars.VERCEL_TEAM_ID }}
          GH_PAT: ${{ secrets.GH_PAT }}
